.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "TRY" "1" "" "try 0.2.0" "Do, or do not. There is no \f[I]try\f[R]."
.hy
.SH NAME
.PP
try - run a command in an overlay
.SH SYNOPSIS
.PP
try [-ny] [-i PATTERN] [-D DIR] [-U PATH] [-L LOWER_DIRS] CMD [ARG ...]
.PD 0
.P
.PD
try summary [DIR]
.PD 0
.P
.PD
try commit [DIR]
.PD 0
.P
.PD
try explore
.PD 0
.P
.PD
try -v
.PD 0
.P
.PD
try -h
.SH DESCRIPTION
.PP
\f[I]try\f[R] lets you run a command inside an overlay without modifying
the state of the filesystem.
.PP
While using \f[I]try\f[R] you can choose to commit the result to the
filesystem or completely ignore it without any side-effect to the main
file system.
.SS Flags
.TP
-n
Don\[aq]t commit or prompt for commit.
Just return the overlay directory.
Overrides -y.
.TP
-y
Assume yes to all prompts.
Overrides -n.
.TP
-v
Show version information (and exit).
.TP
-h
Show a usage message (and exit).
.TP
-x
Prevent network access (by unsharing the network namespace).
.SS Options
.TP
-i \f[I]PATTERN\f[R]
Ignore paths that match \f[I]PATTERN\f[R] on summary and commit.
This option can be passed multiple times; the patterns given will be
used in as arguments to \f[V]-e\f[R] in a call to \f[V]grep -v\f[R].
.TP
-D \f[I]DIR\f[R]
Specify \f[I]DIR\f[R] as the overlay directory (implies -n).
The use of -D also implies that \f[I]DIR\f[R] already exists.
.TP
-U \f[I]PATH\f[R]
Use the unionfs helper implementation defined in the \f[I]PATH\f[R]
(e.g., mergerfs, unionfs-fuse) instead of the default.
This option is recommended in case OverlayFS fails.
.TP
-L \f[I]LOWER_DIRS\f[R]
Specify a colon-separated list of directories to be used as lower
directories for the overlay, formatted as \[dq]dir1:dir2:...:dirn\[dq]
(implies -n).
.SS Subcommands
.TP
try summary \f[I]DIR\f[R]
Show the summary for the overlay in \f[I]DIR\f[R].
.TP
try commit \f[I]DIR\f[R]
Commit the overlay in \f[I]DIR\f[R].
.TP
try explore
Run in interactive mode, i.e., start a shell in the overlay.
.SS Arguments
.TP
\f[I]CMD\f[R]
Specifies the command to execute inside the overlay.
.TP
\f[I]ARG\f[R]
The arguments of \f[I]CMD\f[R].
.SH EXIT STATUS
.TP
0
Command ran successfully.
.TP
1
Consistency error/failure.
.TP
2
Input or other internal error.
.SH EXAMPLES
.PP
The general workflow is to \f[I]try\f[R] a command before committing its
results to your workspace.
.PP
To uncompress a gzip file, you can invoke \f[I]try\f[R] as follows
.IP
.nf
\f[C]
try gunzip file.txt.gz
\f[R]
.fi
.PP
By default, \f[I]try\f[R] will ask you to commit the changes made at the
end of its execution.
.IP
.nf
\f[C]
Changes detected in the following files:

/tmp/tmp.0caZdxnHuR/upperdir/home/me/file.txt
/tmp/tmp.0caZdxnHuR/upperdir/home/me/file.txt.gz

Commit these changes? [y/N] y
\f[R]
.fi
.PP
Sometimes, you might want to pre-execute a command and commit its result
at a later time.
Invoking \f[I]try\f[R] with the -n flag will return the overlay
directory, without committing the result.
.IP
.nf
\f[C]
try -n gunzip file.txt.gz
\f[R]
.fi
.PP
Alternatively, you can specify your own overlay directory as follows
(note that \f[I]try_dir\f[R] already exists):
.IP
.nf
\f[C]
try -D try_dir gunzip file.txt.gz
\f[R]
.fi
.PP
To use multiple lower directories for overlay (by merging them), you can
use the \f[V]-L\f[R] flag followed by a colon-separated list of
directories.
The directories on the left have higher precedence and can overwrite the
directories on the right:
.IP
.nf
\f[C]
try -L /lowerdir1:/lowerdir2:/lowerdir3 gunzip file.txt.gz
\f[R]
.fi
.PP
You can inspect the changes made inside a given overlay directory:
.IP
.nf
\f[C]
try summary try_dir
\f[R]
.fi
.PP
You can also choose to commit the overlay directory contents:
.IP
.nf
\f[C]
try commit try_dir
\f[R]
.fi
.SH SEE ALSO
.PP
checkinstall(1), chroot(1), unshare(1), mount_namespaces(7),
namespaces(7), mount(8)
.SH BUGS
.PP
See <https://github.com/binpash/try/issues>.
.SH LICENSE
.PP
Copyright (c) 2023 The PaSh Authors.
MIT licensed.
.SH AUTHORS
The PaSh Authors.
