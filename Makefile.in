prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datarootdir=@datarootdir@
mandir=@mandir@

CC=@CC@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
INSTALL=@INSTALL@

.PHONY: all install test dist lint clean

DISTDIR=@PACKAGE_TARNAME@-@PACKAGE_VERSION@
DISTTGZ=$(DISTDIR).tgz

TARGETS=$(if $(findstring yes,@enable_utils@),utils/try-summary utils/try-commit) man/try.1.gz

all: $(TARGETS)

install: $(TARGETS)
	$(INSTALL) -d $(bindir)
	$(INSTALL) -m 755 try $(bindir)
ifeq (@enable_utils@, yes)
	$(INSTALL) -m 755 utils/try-summary $(bindir)
	$(INSTALL) -m 755 utils/try-commit $(bindir)
endif
	$(INSTALL) -d $(mandir)/man1
	$(INSTALL) -m 644 man/try.1.gz $(mandir)/man1

dist: $(DISTTGZ)

$(DISTTGZ): $(DISTDIR)
	tar czf $@ $<
	rm -rf $(DISTDIR)

$(DISTDIR): man/try.1 man/try.1.gz
	mkdir $@
	cp configure configure.ac config.guess config.sub install-sh LICENSE Makefile.in README.md STYLE.md try Vagrantfile $@
	cp -R completions $@
	cp -R docs $@
	cp -R man $@
	cp -R scripts $@
	cp -R test $@
	cp -R utils $@

man/try.1.gz: man/try.1
	cat $< | gzip >$@

man/try.1: docs/try.1.md
	pandoc --standalone --from markdown-smart --to man $< -o $@

utils/try-summary: utils/ignores.o utils/try-summary.o
	$(CC) $(CPPFLAGS) $(CFLAGS) -o $@ -g $^

utils/try-commit: utils/ignores.o utils/try-commit.o
	$(CC) $(CPPFLAGS) $(CFLAGS) -o $@ -g $^

test: try utils/try-summary utils/try-commit
	scripts/run_tests.sh

lint:
	scripts/lint.sh

clean:
ifeq (@enable_manpage@, yes)
	-rm man/try.1 man/try.1.gz
endif
	-rm utils/*.o
	-rm utils/try-summary utils/try-commit
